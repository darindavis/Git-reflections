What happens when you initialize a repository? Why do you need to do it?

.git is created along with default files and sub-directories.  Without those default files, Git doesn't know where its starting point is.


How is the staging area different from the working directory and the repository? What value do you think it offers?

Staging area is an intermediate step between the working directory and the repository.  It provides a way to specify which files should be included in a commit.


How can you use the staging area to make sure you have one commit per logical change?

Use 'git diff --staged' to see differences between the staging area and most recent commit.  All changes listed should be part of a logical change.


What are some situations when branches would be helpful in keeping your history organized? How would branches help?

Branches would be helpful when you want to experiment with a feature that is uncertain whether it will work.  Branch helps because it allows continued incremental changes to the known working code in parallel with the new experimental code.


How do the diagrams help you visualize the branch structure?

Diagram depict the parent-child relationships of commits.


What is the result of merging two branches together? Why do we represent it in the diagram the way we do?

All the differences between the two branches are now reflected in a single branch.  The merged commit is shown with two parents because that is where the changes came from.


What are the pros and cons of Git's automatic merging vs. always doing merges manually?

Auto-merging is fast.  Manual merging relies on a human for correctness of the merge.


